<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->
<mapper namespace="com.kosmo.veve.mybatis.member">
	<!--resultMap사용시 column속성 필수:ibatis와 다른점  -->
	
	
	<select id="memberSelectOne" parameterType="java.util.Map" resultType="MemberDTO">
		SELECT * FROM VG_USER WHERE userID=#{userID}
	</select>
	<select id="memberSelectAll"  resultType="MemberDTO">
		SELECT * FROM VG_USER
	</select>
	
	<select id="memberIDcheck" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM VG_USER WHERE userID=#{userID}
	</select>
	<select id="memberKaKaocheck" parameterType="string" resultType="int">
		SELECT k1n0 FROM VG_USER WHERE userID=#{userID}
	</select>
	
	<select id="memberFile" parameterType="string" resultType="MemberFileDTO">
		SELECT * FROM USER_FILE WHERE userID=#{userID}
	</select>
	<select id="getmemberID" parameterType="string" resultType="string">
		SELECT userID FROM VG_USER WHERE nickname=#{nickname}
	</select>
	
	<select id="isfollowing" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM USER_FOLLOW WHERE userID=#{userID} AND otherID=#{otherID}
	</select>
	
	
	
	
	
	<insert id="memberInsert" parameterType="java.util.Map">
		INSERT INTO VG_USER(userID,password,name,nickname,age,gender,vg_level,addr,selfintro,signdate,k1n0) VALUES(#{userID},#{password},#{name},#{nickname},#{age},#{gender},#{vg_level},#{addr},#{editordata},default,#{k1n0})
	</insert>
	<insert id="authInsert" parameterType="java.util.Map">
		INSERT INTO AUTH_SECURITY(auth_no,userID,enabled,authority) VALUES(SEQ_AUTH_NO.NEXTVAL,#{userID},DEFAULT,DEFAULT)
	</insert>
	<insert id="userFileInsert" parameterType="java.util.Map">
		INSERT INTO USER_FILE(user_file_no,userID,f_path,f_name) VALUES(SEQ_USER_FILE_NO.NEXTVAL,#{userID},#{f_path},#{f_name})
	</insert>
	<delete id="deleteUser" parameterType="String">
		DELETE FROM VG_USER WHERE userID=#{userID}
	</delete>
	<delete id="deleteFollowforWithdraw" parameterType="String">
		DELETE FROM USER_FOLLOW WHERE otherID =#{userID}
	</delete>
	
	 
	 <update id="updateUserPwd" parameterType="java.util.Map">
	 	UPDATE VG_USER SET PASSWORD = #{editPWD} WHERE userID = #{userID}
	 </update>
	 
	 
	
	
	
	
	<!-- 팔로잉/팔로워 count -->
	<select id="memberFollowing" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM USER_FOLLOW WHERE userID=#{userID}
	</select>
	<select id="memberFollower" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM USER_FOLLOW WHERE otherID=#{userID}
	</select>
	<select id="memberFollowingInfo" parameterType="string" resultType="MemberFollowDTO">
		SELECT * FROM USER_FOLLOW WHERE userID=#{userID}
	</select>
	<select id="memberFollowerInfo" parameterType="string" resultType="MemberFollowDTO">
		SELECT * FROM USER_FOLLOW WHERE otherID=#{userID}
	</select>
	<insert id="insertFollow" parameterType="java.util.Map">
		INSERT INTO USER_FOLLOW(otherID,userID) VALUES(#{otherID},#{userID})
	</insert>
	<delete id="deleteFollow" parameterType="java.util.Map">
		DELETE FROM USER_FOLLOW WHERE otherID =#{otherID} AND userID= #{userID}
	</delete>
	
	
	
	
	
	
	<!--  =========================================  admin -->
	<!-- 모든 맴버 출력용 -->
	<select id="selectList_admin" resultType="MemberDTO">
		SELECT * FROM 
		(SELECT T.*, ROWNUM R FROM 
		(SELECT u.*, 
		(SELECT COUNT(*) FROM REC_BOARD rec  
		WHERE u.userID = rec.userID ) +
		(SELECT COUNT(*) FROM GALLARY_BOARD gal  
		WHERE u.userID = gal.userID )
		as "writtenPostCount", 
		(SELECT COUNT(*) FROM REC_COMMENT rec_com  
		WHERE u.userID = rec_com.userID ) +
		(SELECT COUNT(*) FROM GALLARY_COMMENT gal_com  
		WHERE u.userID = gal_com.userID ) +
		(SELECT COUNT(*) FROM NOTICE_COMMENT not_com  
		WHERE u.userID = not_com.userID )
		as "writtenCommentCount" 
		FROM VG_USER u
		<if test="searchColumn != null">
			WHERE ${searchColumn} LIKE '%' || #{searchWord} || '%' 		
		</if>
		
		ORDER BY 1) T) 
		WHERE R BETWEEN #{start} AND #{end}
	</select>
	
	<select id="showauth" parameterType="String" resultType="java.util.Map">
		SELECT * FROM AUTH_SECURITY WHERE userID=#{userID}
	</select>
	 <update id="updateauth" parameterType="java.util.Map">
	 	UPDATE AUTH_SECURITY SET ENABLED = #{ENABLED} WHERE userID=#{id}
	 </update>
	
	
	<!-- 페이징을 위한 모든 맴버 수 --><!-- admin 빼기 -->
	<select id="getTotalMember" resultType="int">
		SELECT COUNT(*) FROM VG_USER
		<if test="searchColumn != null">
			WHERE ${searchColumn} LIKE '%' || #{searchWord} || '%'
		</if>
	</select>
	
	<!-- 안드로이드 -->
   <select id="memberIsLogin" resultType="MemberDTO">
      SELECT * FROM VG_USER WHERE userID=#{userID} AND password=#{password}
   </select>
   
   <insert id="memberSignUp" parameterType="MemberDTO">
      INSERT INTO VG_USER(userID,password,name,nickname,age,gender,vg_level,addr,selfintro,signdate,k1n0) VALUES(#{userID},#{password},#{name},#{nickname},#{age},#{gender},#{vg_level},#{addr},#{selfintro},default,#{k1n0})
   </insert>
   
   <insert id="memberSignUpFile" parameterType="MemberFileDTO">
      INSERT INTO USER_FILE(user_file_no,f_path,f_name,userID) VALUES(SEQ_USER_FILE_NO.NEXTVAL,#{f_path},#{f_name},#{userID})
   </insert>
   
   <update id="memberInfoupdate" parameterType="MemberDTO">
      UPDATE vg_user
      SET password = #{password}, name = #{name}
      WHERE userID = #{userID}
   </update>
   
   <update id="memberFileUpdate" parameterType="MemberFileDTO">
      UPDATE user_file
      SET userID = #{userID}, user_file_no =2, f_name = #{f_name}, f_path = #{f_path}
      WHERE userID = #{userID}
   </update>
   
   <select id="userIDCheck" parameterType="MemberDTO">
      SELECT userID FROM VG_USER WHERE userID=#{userID}
   </select>
   
   <insert id="insertFollowAR" parameterType="MemberFollowDTO">
      INSERT INTO USER_FOLLOW(otherID,userID) VALUES(#{otherID},#{userID})
   </insert>
   
   <select id="androidFollowingInfo" parameterType="java.util.Map" resultType="MemberFollowDTO">
      SELECT otherID FROM user_follow WHERE userID=#{userID}
   </select>
   
   <select id="androidFollowingFile" parameterType="java.util.Map" resultType="MemberFileDTO">
      SELECT f_name
        FROM user_follow f, user_file ff
        WHERE f.userID=#{userID} AND f.otherID = ff.userID
   </select>
   
   <select id="androidFollowInfo" parameterType="java.util.Map" resultType="MemberFollowDTO">
      SELECT userID FROM user_follow WHERE otherID=#{userID}
   </select>
   
   <select id="androidFollowFile" parameterType="java.util.Map" resultType="MemberFileDTO">
        SELECT f_name
        FROM user_follow f, user_file ff
        WHERE f.otherID=#{userID} AND f.userID = ff.userID
   </select>
   
   <select id="androidCommentUserFile" parameterType="java.util.Map" resultType="MemberFileDTO">
        SELECT f_name
        FROM gallary_comment c,user_file f
       WHERE c.userID = f.userID
   </select>
	
	
	
	
</mapper>